version: '2'

## Alternative: use Docker volume. This can get deleted if you're not careful.
#volumes:
#  mongo:

services:
  mongo:
    ## Mongo database for both kadira-engine and kadira-ui
    image: mongo:3.4
    volumes:
      - "/opt/kadira-mongo:/data/db"
      #- mongo:/data
    command: mongod --smallfiles --replSet kadira
    ports:
      - "27017:27017"
    restart: always

  nginx-proxy:
    ## Proxy to map https://host:22022 to kadira-engine's port 11011
    image: jwilder/nginx-proxy
    ports:
      - "22022:443"
      ## 80 and 443 need to mapped here so that letsencrypt can check server
      - "443:443"
      - "80:80"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/etc/nginx/certs"
    restart: always

  letsencrypt:
    ## Automatic SSL certificate acquisition
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - nginx-proxy
    restart: always

  kadira-engine:
    ## This is the endpoint where Meteor app sends performance data
    image: vladgolubev/kadira-engine
    ports:
      - "11011:11011"
    environment:
      - PORT=11011
      - MONGO_URL=mongodb://mongo/kadira?replicaSet=kadira
      - MONGO_SHARD_URL_one=mongodb://mongo/kadira?replicaSet=kadira
      - VIRTUAL_HOST=${HOST}
      - HTTPS_METHOD=noredirect
      - LETSENCRYPT_HOST=${HOST}
      - LETSENCRYPT_EMAIL=${EMAIL}
    links:
      - mongo
    restart: always

  kadira-rma:
    ## This computes statistics databases every minute.
    image: vladgolubev/kadira-rma
    environment:
      - MONGO_URL=mongodb://mongo/kadira
    links:
      - mongo
    restart: always

  kadira-ui:
    ## Meteor app that presents the Kadira user interface.
    image: vladgolubev/kadira-ui
    ports:
      #- "80:4000"
      - "4000:4000"
    environment:
      - MONGO_URL=mongodb://mongo/kadira
      - MONGO_SHARD_URL_one=mongodb://mongo/kadira
    links:
      - mongo
    restart: always
